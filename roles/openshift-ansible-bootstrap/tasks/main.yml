# vim: set tabstop=2 shiftwidth=2 expandtab ft=yaml :
---
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}.{{ domain_name }}"

- name: Default etc hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ item }}.{{ domain_name }}"
    state: absent
  with_items: "{{ groups['openshiftnodes'] }}"

- name: Add hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item]['ansible_host'] }} {{ item }}.{{ domain_name }}"
    regexp: "{{ hostvars[item]['ansible_host'] }} {{ item }}.{{ domain_name }}"
  with_items: "{{ groups['openshiftnodes'] }}"

- name: Stop docker
  service:
    name: docker
    state: stopped
  ignore_errors: yes

- name: install pre-reqs
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
    - NetworkManager

- name: start NetworkManager
  service:
    name: NetworkManager
    state: started
    enabled: yes

- name: Install docker from CentOS repo
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - docker

- name: Setup volumes and the thinpool
  block:
    - name: Get current volume groups
      command: >
        vgdisplay
      register: vg_list

    - name: Get current physical volumes
      command: >
        pvdisplay
      register: pv_list

    - name: Get current logical volumes
      command: >
        lvdisplay
      register: lv_list

    - name: Create physical volume
      command: >
        pvcreate /dev/{{ vm_disk_device }}
      when: "vm_disk_device not in pv_list.stdout"

    - name: Create volume group
      command: >
        vgcreate docker /dev/{{ vm_disk_device }}
      when: "'docker' not in vg_list.stdout"

    - name: Create thinpool logical volumes
      command: >
        lvcreate --wipesignatures y -n {{ item.name }} docker -l {{ item.percent }}%VG
      when: "'thinpool' not in lv_list.stdout"
      with_items:
        - name: thinpool
          percent: 95
        - name: thinpoolmeta
          percent: 1

    - name: Convert volumes to a thin pool
      command: >
        lvconvert -y
        --zero n
        -c 512K
        --thinpool docker/thinpool
        --poolmetadata docker/thinpoolmeta
      when: "'LV Pool metadata' not in lv_list.stdout"
      register: lvconvert_result

    - name: Template thinpool.profile
      template:
        src: docker-thinpool.profile.j2
        dest: /etc/lvm/profile/docker-thinpool.profile

    - name: Apply the LVM profile
      command: >
        lvchange --metadataprofile docker-thinpool docker/thinpool
      when: lvconvert_result.changed

    - name: Always apply LVS monitoring
      command: >
        lvs -o+seg_monitor
  when: setup_thinpool

- name: Template Docker's daemon.json
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json

- name: Start and enable docker
  service:
    name: docker
    enabled: yes
    state: started

- name: Check docker info
  command: >
    docker info
  register: docker_info
  tags:
    - skip_ansible_lint # skipping ANSIBLE0012 because we always want to check

- name: Fail when docker info shows a loopback device
  fail:
    msg: "Looks like there's still a loopback device in play with docker storage."
  when: "'loop' in docker_info.stdout"
